// Код читается больше, чем пишется,
// не нужно экономить на понятности
// и чистоте кода ради скоростию
// Например: FillRey - ненужно сокращать FR

// Когда придумываете название для общедоступной единицы,
// старайтесь не использовать имена, потенциально или 
// явно конфликтующие со стандартными идентификаторами.

// Используйте имена с простым написанием. Их проще читать и набирать.
// Избегайте (в разумных пределах) использование слов с двойными
// буквами, сложным чередованием согласных.

// Никогда не используйте матерные (запрещенные) слова в коде
// (в том числе в комментариях).

// Примеры: 
// - Идентификатор HorizontalAlignment легче читается на английском,
// чем AlignmentHorizontal

// - Имя CanScrollHorizontally лучше, чем ScrollableX 
// (неочевидная ссылка на ось X)

// - Не используйте знаки подчеркивания, дефисы и др символы,
// не являющиеся буквенно-цифравыми - Can_Scroll_Horizontally

// - Избегайте использования идентификаторов, совпадающих с ключевыми
// словами широко используемых языков программирования string class = "1B"

// - Старайтесь не использовать сокращения, GetWindom, проще понять чем GetWin

// - Не используйте акронимы, которые не являются широко принятыми,
// и в целом используется акронимы только при необходимости -
// - SendPM(int i, string t) точно хуже, чем SendPrivateMessage(int id, string text)

// - Используйте универсальные имена платформы,не относящиеся к конкретному языку :
// ConvertToByte(string value); против ConvertToUnsignedChar(string value);

// Используйте общие, не привязанные к контексту имена, когда это нужно
// ConvertToByte(string value); лучше, чем ConvertToByte(string str);

// Именование методов, аргументов, переменных и др системных единиц отличается.

// Нотации (стиль написания):

// Pascal - указания этого стиля оформления идентификатора обозначает, что
// первая буква заглавная и все последующие первые буквы слов тоже заглавные
// Пример: BackColor, DateTime

// Camel - указание этого стиля обозначает, что первая буква строчная,
// а остальнве первые буквы слов заглавные
// Пример: borderColor, accessTime

// Избегайте длинных строк, переносите инструкцию на новую строку.
// Не размещайте несколько инструкций на одной строке.
// При разбивке длинных выражений на нескрлько строк,
// оставляйте операторы на новой строке

//  Пример: int result = (1+2) - (3+4)
//                      / (15*16) - (17+19)
//                      / (25*26) - (27+29)
//                      ;

// Используйте автоформатирование кода

// Не используйте проверки вида b == false.
// Вместо этого используйте !d

// Красивый код: какой он?

// * Для методов используйте нотацию Pascal(вне зависимости
// от области видимости метода)   GetStream()
// * Если метод асинхронный - он заканчивается на "Async" GetStreamAsync()
// * Для именования переменных используйте нотацию Camel.
// * Используйте неявную типизацию (var) для локальных переменных
// в случаях, когда тип переменной понятен из правой части
// назначения или когда точный тип не важен
// * Используйте переменные непосредственно перед их использованием
// * Счетчики в циклах i, j, k, l, m, n, если этого не требует условие.
// * Инициализируйте переменные при объявлении, если есть такая возможность.

// Комментарии и документирование
// * Внутри блока с кодом отделяйте текст комментариями одним пробелом
// <<// Текст комментария.>>
// * Неиспользуемый код не комментируйте, а удаляйте